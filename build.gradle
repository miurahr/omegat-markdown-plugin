plugins {
    id "com.github.spotbugs" version "1.6.8"
    id "com.github.johnrengelman.shadow" version "4.0.3"
}
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'distribution'
apply plugin: 'idea'
version = '0.3'

configurations {
    provided
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }
    integrationTest {
        java {
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += sourceSets.main.output + configurations.testCompile
        compileClasspath += configurations.provided
        runtimeClasspath += output + compileClasspath + configurations.testRuntime
        runtimeClasspath += configurations.provided
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
        scopes.TEST.plus += [ configurations.integrationTestCompile ]
    }
}

repositories {
    maven {
        url "https://dl.bintray.com/omegat-org/maven"
    }
    jcenter()
}

dependencies {
    compile 'com.vladsch.flexmark:flexmark-all:0.40.0'
    compile 'com.vladsch.flexmark:flexmark:0.40.0'
    compile 'com.vladsch.flexmark:flexmark-util:0.40.0'
    compile  'org.slf4j:slf4j-api:1.7.21'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.9'
    provided 'org.omegat:omegat:4.0.0-02'
    provided 'commons-io:commons-io:2.4'
    provided 'commons-lang:commons-lang:2.6'
    provided 'org.slf4j:slf4j-nop:1.5.10'
    testCompile 'org.testng:testng:6.9.10'
    testCompile 'com.alibaba:fastjson:1.2.17'
    integrationTestCompile 'org.testng:testng:6.9.10'
}

test.useTestNG()

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

//jar {
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } {
//            exclude "META-INF/MANIFEST.MF"
//        }
//    }
//}

shadowJar {
    configurations = [project.configurations.compile]
    manifest {
        attributes "OmegaT-Plugins": "tokyo.northside.omegat.markdown.OmegatMarkdownFilter"
    }
}

checkstyle {
    config = resources.text.fromFile("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = true
    toolVersion = '7.1'
    sourceSets = [project.sourceSets.main]
}
tasks.checkstyleMain.setGroup('Verification')

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
  setGroup('Verification')
}
task integrationTest(type: Test) {
    description = "Integration/Acceptance Test"
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
    useTestNG()
}
check.dependsOn integrationTest
integrationTest.mustRunAfter test

idea {
    module {
        testSourceDirs += file('src/integration-test/java')
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourceJar
}

distTar {
  compression = Compression.GZIP
}

distributions {
    main {
        contents {
            from('README.md', 'CHANGELOG.md', 'COPYING', 'DEVELOP.md')
            from(sourceJar) {
                into 'source'
            }
            from(jar) {
                into 'plugin'
            }
        }
    }
}

